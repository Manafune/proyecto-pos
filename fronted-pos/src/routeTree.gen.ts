/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AuthenticatedImport } from './routes/_authenticated'
import { Route as AuthImport } from './routes/_auth'
import { Route as AuthenticatedmainIndexImport } from './routes/_authenticated/(main)/index'
import { Route as AuthenticatedusersUsersImport } from './routes/_authenticated/(users)/users'
import { Route as AuthenticatedsalesSalesImport } from './routes/_authenticated/(sales)/sales'
import { Route as AuthenticatedproductsProductsImport } from './routes/_authenticated/(products)/products'
import { Route as AuthenticatedclientsClientsImport } from './routes/_authenticated/(clients)/clients'

// Create Virtual Routes

const AuthenticatedSettingsLazyImport = createFileRoute(
  '/_authenticated/settings',
)()
const AuthSignUpLazyImport = createFileRoute('/_auth/sign-up')()
const AuthSignInLazyImport = createFileRoute('/_auth/sign-in')()
const AuthenticatedusersUsersIndexLazyImport = createFileRoute(
  '/_authenticated/(users)/users/',
)()
const AuthenticatedsalesSalesIndexLazyImport = createFileRoute(
  '/_authenticated/(sales)/sales/',
)()
const AuthenticatedproductsProductsIndexLazyImport = createFileRoute(
  '/_authenticated/(products)/products/',
)()
const AuthenticatedclientsClientsIndexLazyImport = createFileRoute(
  '/_authenticated/(clients)/clients/',
)()
const AuthenticatedusersUsersAddLazyImport = createFileRoute(
  '/_authenticated/(users)/users/add',
)()
const AuthenticatedusersUsersIdLazyImport = createFileRoute(
  '/_authenticated/(users)/users/$id',
)()
const AuthenticatedsalesSalesAddLazyImport = createFileRoute(
  '/_authenticated/(sales)/sales/add',
)()
const AuthenticatedproductsProductsAddLazyImport = createFileRoute(
  '/_authenticated/(products)/products/add',
)()
const AuthenticatedproductsProductsIdLazyImport = createFileRoute(
  '/_authenticated/(products)/products/$id',
)()
const AuthenticatedclientsClientsAddLazyImport = createFileRoute(
  '/_authenticated/(clients)/clients/add',
)()
const AuthenticatedclientsClientsIdLazyImport = createFileRoute(
  '/_authenticated/(clients)/clients/$id',
)()

// Create/Update Routes

const AuthenticatedRoute = AuthenticatedImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRoute,
} as any)

const AuthRoute = AuthImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedSettingsLazyRoute = AuthenticatedSettingsLazyImport.update({
  path: '/settings',
  getParentRoute: () => AuthenticatedRoute,
} as any).lazy(() =>
  import('./routes/_authenticated/settings.lazy').then((d) => d.Route),
)

const AuthSignUpLazyRoute = AuthSignUpLazyImport.update({
  path: '/sign-up',
  getParentRoute: () => AuthRoute,
} as any).lazy(() => import('./routes/_auth/sign-up.lazy').then((d) => d.Route))

const AuthSignInLazyRoute = AuthSignInLazyImport.update({
  path: '/sign-in',
  getParentRoute: () => AuthRoute,
} as any).lazy(() => import('./routes/_auth/sign-in.lazy').then((d) => d.Route))

const AuthenticatedmainIndexRoute = AuthenticatedmainIndexImport.update({
  path: '/',
  getParentRoute: () => AuthenticatedRoute,
} as any).lazy(() =>
  import('./routes/_authenticated/(main)/index.lazy').then((d) => d.Route),
)

const AuthenticatedusersUsersRoute = AuthenticatedusersUsersImport.update({
  path: '/users',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedsalesSalesRoute = AuthenticatedsalesSalesImport.update({
  path: '/sales',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedproductsProductsRoute =
  AuthenticatedproductsProductsImport.update({
    path: '/products',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const AuthenticatedclientsClientsRoute =
  AuthenticatedclientsClientsImport.update({
    path: '/clients',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const AuthenticatedusersUsersIndexLazyRoute =
  AuthenticatedusersUsersIndexLazyImport.update({
    path: '/',
    getParentRoute: () => AuthenticatedusersUsersRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/(users)/users.index.lazy').then(
      (d) => d.Route,
    ),
  )

const AuthenticatedsalesSalesIndexLazyRoute =
  AuthenticatedsalesSalesIndexLazyImport.update({
    path: '/',
    getParentRoute: () => AuthenticatedsalesSalesRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/(sales)/sales.index.lazy').then(
      (d) => d.Route,
    ),
  )

const AuthenticatedproductsProductsIndexLazyRoute =
  AuthenticatedproductsProductsIndexLazyImport.update({
    path: '/',
    getParentRoute: () => AuthenticatedproductsProductsRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/(products)/products.index.lazy').then(
      (d) => d.Route,
    ),
  )

const AuthenticatedclientsClientsIndexLazyRoute =
  AuthenticatedclientsClientsIndexLazyImport.update({
    path: '/',
    getParentRoute: () => AuthenticatedclientsClientsRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/(clients)/clients.index.lazy').then(
      (d) => d.Route,
    ),
  )

const AuthenticatedusersUsersAddLazyRoute =
  AuthenticatedusersUsersAddLazyImport.update({
    path: '/add',
    getParentRoute: () => AuthenticatedusersUsersRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/(users)/users.add.lazy').then(
      (d) => d.Route,
    ),
  )

const AuthenticatedusersUsersIdLazyRoute =
  AuthenticatedusersUsersIdLazyImport.update({
    path: '/$id',
    getParentRoute: () => AuthenticatedusersUsersRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/(users)/users.$id.lazy').then(
      (d) => d.Route,
    ),
  )

const AuthenticatedsalesSalesAddLazyRoute =
  AuthenticatedsalesSalesAddLazyImport.update({
    path: '/add',
    getParentRoute: () => AuthenticatedsalesSalesRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/(sales)/sales.add.lazy').then(
      (d) => d.Route,
    ),
  )

const AuthenticatedproductsProductsAddLazyRoute =
  AuthenticatedproductsProductsAddLazyImport.update({
    path: '/add',
    getParentRoute: () => AuthenticatedproductsProductsRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/(products)/products.add.lazy').then(
      (d) => d.Route,
    ),
  )

const AuthenticatedproductsProductsIdLazyRoute =
  AuthenticatedproductsProductsIdLazyImport.update({
    path: '/$id',
    getParentRoute: () => AuthenticatedproductsProductsRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/(products)/products.$id.lazy').then(
      (d) => d.Route,
    ),
  )

const AuthenticatedclientsClientsAddLazyRoute =
  AuthenticatedclientsClientsAddLazyImport.update({
    path: '/add',
    getParentRoute: () => AuthenticatedclientsClientsRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/(clients)/clients.add.lazy').then(
      (d) => d.Route,
    ),
  )

const AuthenticatedclientsClientsIdLazyRoute =
  AuthenticatedclientsClientsIdLazyImport.update({
    path: '/$id',
    getParentRoute: () => AuthenticatedclientsClientsRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/(clients)/clients.$id.lazy').then(
      (d) => d.Route,
    ),
  )

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedImport
      parentRoute: typeof rootRoute
    }
    '/_auth/sign-in': {
      id: '/_auth/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof AuthSignInLazyImport
      parentRoute: typeof AuthImport
    }
    '/_auth/sign-up': {
      id: '/_auth/sign-up'
      path: '/sign-up'
      fullPath: '/sign-up'
      preLoaderRoute: typeof AuthSignUpLazyImport
      parentRoute: typeof AuthImport
    }
    '/_authenticated/settings': {
      id: '/_authenticated/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof AuthenticatedSettingsLazyImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/(clients)/clients': {
      id: '/_authenticated/clients'
      path: '/clients'
      fullPath: '/clients'
      preLoaderRoute: typeof AuthenticatedclientsClientsImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/(products)/products': {
      id: '/_authenticated/products'
      path: '/products'
      fullPath: '/products'
      preLoaderRoute: typeof AuthenticatedproductsProductsImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/(sales)/sales': {
      id: '/_authenticated/sales'
      path: '/sales'
      fullPath: '/sales'
      preLoaderRoute: typeof AuthenticatedsalesSalesImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/(users)/users': {
      id: '/_authenticated/users'
      path: '/users'
      fullPath: '/users'
      preLoaderRoute: typeof AuthenticatedusersUsersImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/(main)/': {
      id: '/_authenticated/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthenticatedmainIndexImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/(clients)/clients/$id': {
      id: '/_authenticated/clients/$id'
      path: '/$id'
      fullPath: '/clients/$id'
      preLoaderRoute: typeof AuthenticatedclientsClientsIdLazyImport
      parentRoute: typeof AuthenticatedclientsClientsImport
    }
    '/_authenticated/(clients)/clients/add': {
      id: '/_authenticated/clients/add'
      path: '/add'
      fullPath: '/clients/add'
      preLoaderRoute: typeof AuthenticatedclientsClientsAddLazyImport
      parentRoute: typeof AuthenticatedclientsClientsImport
    }
    '/_authenticated/(products)/products/$id': {
      id: '/_authenticated/products/$id'
      path: '/$id'
      fullPath: '/products/$id'
      preLoaderRoute: typeof AuthenticatedproductsProductsIdLazyImport
      parentRoute: typeof AuthenticatedproductsProductsImport
    }
    '/_authenticated/(products)/products/add': {
      id: '/_authenticated/products/add'
      path: '/add'
      fullPath: '/products/add'
      preLoaderRoute: typeof AuthenticatedproductsProductsAddLazyImport
      parentRoute: typeof AuthenticatedproductsProductsImport
    }
    '/_authenticated/(sales)/sales/add': {
      id: '/_authenticated/sales/add'
      path: '/add'
      fullPath: '/sales/add'
      preLoaderRoute: typeof AuthenticatedsalesSalesAddLazyImport
      parentRoute: typeof AuthenticatedsalesSalesImport
    }
    '/_authenticated/(users)/users/$id': {
      id: '/_authenticated/users/$id'
      path: '/$id'
      fullPath: '/users/$id'
      preLoaderRoute: typeof AuthenticatedusersUsersIdLazyImport
      parentRoute: typeof AuthenticatedusersUsersImport
    }
    '/_authenticated/(users)/users/add': {
      id: '/_authenticated/users/add'
      path: '/add'
      fullPath: '/users/add'
      preLoaderRoute: typeof AuthenticatedusersUsersAddLazyImport
      parentRoute: typeof AuthenticatedusersUsersImport
    }
    '/_authenticated/(clients)/clients/': {
      id: '/_authenticated/clients/'
      path: '/'
      fullPath: '/clients/'
      preLoaderRoute: typeof AuthenticatedclientsClientsIndexLazyImport
      parentRoute: typeof AuthenticatedclientsClientsImport
    }
    '/_authenticated/(products)/products/': {
      id: '/_authenticated/products/'
      path: '/'
      fullPath: '/products/'
      preLoaderRoute: typeof AuthenticatedproductsProductsIndexLazyImport
      parentRoute: typeof AuthenticatedproductsProductsImport
    }
    '/_authenticated/(sales)/sales/': {
      id: '/_authenticated/sales/'
      path: '/'
      fullPath: '/sales/'
      preLoaderRoute: typeof AuthenticatedsalesSalesIndexLazyImport
      parentRoute: typeof AuthenticatedsalesSalesImport
    }
    '/_authenticated/(users)/users/': {
      id: '/_authenticated/users/'
      path: '/'
      fullPath: '/users/'
      preLoaderRoute: typeof AuthenticatedusersUsersIndexLazyImport
      parentRoute: typeof AuthenticatedusersUsersImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  AuthRoute: AuthRoute.addChildren({
    AuthSignInLazyRoute,
    AuthSignUpLazyRoute,
  }),
  AuthenticatedRoute: AuthenticatedRoute.addChildren({
    AuthenticatedSettingsLazyRoute,
    AuthenticatedclientsClientsRoute:
      AuthenticatedclientsClientsRoute.addChildren({
        AuthenticatedclientsClientsIdLazyRoute,
        AuthenticatedclientsClientsAddLazyRoute,
        AuthenticatedclientsClientsIndexLazyRoute,
      }),
    AuthenticatedproductsProductsRoute:
      AuthenticatedproductsProductsRoute.addChildren({
        AuthenticatedproductsProductsIdLazyRoute,
        AuthenticatedproductsProductsAddLazyRoute,
        AuthenticatedproductsProductsIndexLazyRoute,
      }),
    AuthenticatedsalesSalesRoute: AuthenticatedsalesSalesRoute.addChildren({
      AuthenticatedsalesSalesAddLazyRoute,
      AuthenticatedsalesSalesIndexLazyRoute,
    }),
    AuthenticatedusersUsersRoute: AuthenticatedusersUsersRoute.addChildren({
      AuthenticatedusersUsersIdLazyRoute,
      AuthenticatedusersUsersAddLazyRoute,
      AuthenticatedusersUsersIndexLazyRoute,
    }),
    AuthenticatedmainIndexRoute,
  }),
})

/* prettier-ignore-end */
